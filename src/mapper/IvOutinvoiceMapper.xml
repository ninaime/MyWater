<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.IvOutinvoiceMapper">
  <resultMap id="BaseResultMap" type="model.IvOutinvoice">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="EMPID" jdbcType="INTEGER" property="empid" />
    <result column="INID" jdbcType="INTEGER" property="inid" />
    <result column="STARTNO" jdbcType="VARCHAR" property="startno" />
    <result column="ENDNO" jdbcType="VARCHAR" property="endno" />
    <result column="COUNTS" jdbcType="INTEGER" property="counts" />
    <result column="OUTDATE" jdbcType="DATE" property="outdate" />
    <result column="OUTEMPID" jdbcType="INTEGER" property="outempid" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, EMPID, INID, STARTNO, ENDNO, COUNTS, OUTDATE, OUTEMPID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from iv_outinvoice
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from iv_outinvoice
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.IvOutinvoice">
    insert into iv_outinvoice (ID, EMPID, INID, 
      STARTNO, ENDNO, COUNTS, 
      OUTDATE, OUTEMPID)
    values (#{id,jdbcType=INTEGER}, #{empid,jdbcType=INTEGER}, #{inid,jdbcType=INTEGER}, 
      #{startno,jdbcType=VARCHAR}, #{endno,jdbcType=VARCHAR}, #{counts,jdbcType=INTEGER}, 
      #{outdate,jdbcType=DATE}, #{outempid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.IvOutinvoice">
    insert into iv_outinvoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="empid != null">
        EMPID,
      </if>
      <if test="inid != null">
        INID,
      </if>
      <if test="startno != null">
        STARTNO,
      </if>
      <if test="endno != null">
        ENDNO,
      </if>
      <if test="counts != null">
        COUNTS,
      </if>
      <if test="outdate != null">
        OUTDATE,
      </if>
      <if test="outempid != null">
        OUTEMPID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="empid != null">
        #{empid,jdbcType=INTEGER},
      </if>
      <if test="inid != null">
        #{inid,jdbcType=INTEGER},
      </if>
      <if test="startno != null">
        #{startno,jdbcType=VARCHAR},
      </if>
      <if test="endno != null">
        #{endno,jdbcType=VARCHAR},
      </if>
      <if test="counts != null">
        #{counts,jdbcType=INTEGER},
      </if>
      <if test="outdate != null">
        #{outdate,jdbcType=DATE},
      </if>
      <if test="outempid != null">
        #{outempid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.IvOutinvoice">
    update iv_outinvoice
    <set>
      <if test="empid != null">
        EMPID = #{empid,jdbcType=INTEGER},
      </if>
      <if test="inid != null">
        INID = #{inid,jdbcType=INTEGER},
      </if>
      <if test="startno != null">
        STARTNO = #{startno,jdbcType=VARCHAR},
      </if>
      <if test="endno != null">
        ENDNO = #{endno,jdbcType=VARCHAR},
      </if>
      <if test="counts != null">
        COUNTS = #{counts,jdbcType=INTEGER},
      </if>
      <if test="outdate != null">
        OUTDATE = #{outdate,jdbcType=DATE},
      </if>
      <if test="outempid != null">
        OUTEMPID = #{outempid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.IvOutinvoice">
    update iv_outinvoice
    set EMPID = #{empid,jdbcType=INTEGER},
      INID = #{inid,jdbcType=INTEGER},
      STARTNO = #{startno,jdbcType=VARCHAR},
      ENDNO = #{endno,jdbcType=VARCHAR},
      COUNTS = #{counts,jdbcType=INTEGER},
      OUTDATE = #{outdate,jdbcType=DATE},
      OUTEMPID = #{outempid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>